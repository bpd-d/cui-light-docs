{"version":3,"sources":["webpack:///./src/components/main/icons/builder/builder.tsx"],"names":["CuiDocsIconPackBuilder","icons","setIcons","icon","iconData","index","name","data","selected","description","className","onClick","map","key","CuiIconPackBuilderCard","item","copy","outObj","reduce","out","current","JSON","stringify","then","classes","props","isSelected"],"mappings":"yFAAA,yKAiBe,SAASA,IACpB,MAAOC,EAAOC,GAAY,WAAkC,IA0C5D,OAZA,YAAgB,KAEZA,EAAS,YAAiB,IAAc,CAACC,EAAcC,EAAkBC,KAC9D,CACHC,KAAMH,EACNI,KAAMH,EACNI,UAAU,EACVH,MAAOA,MAGR,QACR,IACE,YAAGJ,GAGA,gBAAC,IAAkB,CAACK,KAAK,gBAAgBG,YAAY,+CACzD,uBAAKC,UAAU,sBACX,0BAAQA,UAAU,yBAAyBC,QAvCnD,WACIT,EAASD,EAAMW,IAAIT,IACfA,EAAKK,UAAW,EACTL,OAoC6D,cACpE,0BAAQO,UAAU,6CAA6CC,QA/CvE,WACIT,EAASD,EAAMW,IAAIT,IACfA,EAAKK,UAAW,EACTL,OA4CsF,UAEjG,uBAAKO,UAAU,mFACVT,EAAMW,IAAKT,GACD,uBAAKU,IAAKV,EAAKE,OAClB,gBAACS,EAAsB,CAACC,KAAMZ,EAAMQ,QAAUI,IAC1C,IAAIC,EAAO,IAAIf,GACfe,EAAKD,EAAKV,OAASU,EACnBb,EAASc,SAIzB,uBAAKN,UAAU,uFACX,0BAAQA,UAAU,qGAAoG,WAAU,SAASC,QA9CjJ,WACI,IAAIM,EAAShB,EAAMiB,OAA8B,CAACC,EAA4BC,KACtEA,EAAQZ,WACRW,EAAIC,EAAQd,MAAQc,EAAQb,MAEzBY,GACR,IAEC,YAAGF,IACH,YAASI,KAAKC,UAAUL,IAASM,KAAK,KAClC,YAAM,+BAoCoJ,WAlB3J,gBAAC,IAAS,CAACC,QAAQ,4BA4B3B,SAASV,EAAuBW,GASnC,OAAQ,uBAAKf,WAHKgB,EAGeD,EAAMV,KAAKP,SAFjC,iDAAmDkB,EAAa,aAAe,gBAEnCf,QARvD,WACIc,EAAMV,KAAKP,UAAYiB,EAAMV,KAAKP,SAClCiB,EAAMd,QAAQc,EAAMV,QAOpB,uBAAKL,UAAU,uBACX,mCAAgBe,EAAMV,KAAKT,OAC3B,wBAAMI,UAAU,uCAAuCe,EAAMV,KAAKT,QAN1E,IAAkBoB","file":"cui-light-docs.3.js","sourcesContent":["import { CuiIconsPack } from 'bpd-cui-icons/esm/index';\r\nimport * as React from 'react'\r\nimport { GeneralObject } from '../../../../core/models';\r\nimport { PageWithHeaderBase } from '../../../../components/base/PageWithHeaderBase';\r\nimport { mapObjectToArray } from '../../../../core/functions';\r\nimport { copyText } from '../../../../utils/function';\r\nimport { is } from 'bpd-toolkit/dist/esm/index';\r\nimport { toast } from '../../../../core/cui';\r\nimport { IsLoading } from '../../../../components/base/IsLoading';\r\n\r\ninterface CuiIconPackItem {\r\n    name: string;\r\n    data: string;\r\n    selected: boolean;\r\n    index: number;\r\n}\r\n\r\nexport default function CuiDocsIconPackBuilder() {\r\n    const [icons, setIcons] = React.useState<CuiIconPackItem[]>([]);\r\n    function onClearSelectionClick() {\r\n        setIcons(icons.map(icon => {\r\n            icon.selected = false;\r\n            return icon\r\n        }))\r\n    }\r\n\r\n    function onSelectAllClick() {\r\n        setIcons(icons.map(icon => {\r\n            icon.selected = true;\r\n            return icon\r\n        }))\r\n    }\r\n\r\n    function onBuildClick() {\r\n        let outObj = icons.reduce<GeneralObject<string>>((out: GeneralObject<string>, current: CuiIconPackItem) => {\r\n            if (current.selected) {\r\n                out[current.name] = current.data;\r\n            }\r\n            return out;\r\n        }, {});\r\n\r\n        if (is(outObj)) {\r\n            copyText(JSON.stringify(outObj)).then(() => {\r\n                toast(\"Package has been copied\")\r\n            })\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        //Map icons object to array\r\n        setIcons(mapObjectToArray(CuiIconsPack, (icon: string, iconData: string, index: number) => {\r\n            return {\r\n                name: icon,\r\n                data: iconData,\r\n                selected: false,\r\n                index: index\r\n            }\r\n        }))\r\n        return () => { }\r\n    }, [])\r\n    if (!is(icons)) {\r\n        return <IsLoading classes=\"cui-height-viewport-1-2\" />\r\n    }\r\n    return (<PageWithHeaderBase name=\"Icons builder\" description=\"Tool which allows to build custom icon pack\">\r\n        <div className=\"cui-flex cui-right\">\r\n            <button className=\"cui-button cui-default\" onClick={onSelectAllClick}>Select All</button>\r\n            <button className=\"cui-button cui-error cui-margin-small-left\" onClick={onClearSelectionClick}>Clear</button>\r\n        </div>\r\n        <div className=\"cui-flex-grid cui-child-width-1-2 cui-child-width-1-3--m cui-child-width-1-4--l\">\r\n            {icons.map((icon) => {\r\n                return <div key={icon.index}>\r\n                    <CuiIconPackBuilderCard item={icon} onClick={(item => {\r\n                        let copy = [...icons];\r\n                        copy[item.index] = item;\r\n                        setIcons(copy)\r\n                    })} /></div>\r\n            })}\r\n        </div>\r\n        <div className=\"cui-container cui-center cui-position-float cui-position-bottom cui-position-center\">\r\n            <button className=\"cui-button cui-default cui-background-default cui-large cui-box-shadow cui-rounded cui-icon-margin\" cui-icon=\"wrench\" onClick={onBuildClick}>Build</button>\r\n        </div>\r\n    </PageWithHeaderBase>);\r\n}\r\n\r\nexport interface CuiIconPackBuilderCardProps {\r\n    item: CuiIconPackItem;\r\n    onClick: (item: CuiIconPackItem) => void\r\n}\r\n\r\nexport function CuiIconPackBuilderCard(props: CuiIconPackBuilderCardProps) {\r\n    function onSelect() {\r\n        props.item.selected = !props.item.selected;\r\n        props.onClick(props.item);\r\n    }\r\n\r\n    function getClass(isSelected: boolean) {\r\n        return \"cui-card cui-cursor-pointer cui-margin-small \" + (isSelected ? \"cui-accent\" : \"cui-default\");\r\n    }\r\n    return (<div className={getClass(props.item.selected)} onClick={onSelect}>\r\n        <div className=\"cui-flex cui-nowrap\">\r\n            <span cui-icon={props.item.name}></span>\r\n            <span className=\"cui-margin-left cui-overflow-hidden\">{props.item.name}</span>\r\n        </div>\r\n    </div>);\r\n}\r\n"],"sourceRoot":""}