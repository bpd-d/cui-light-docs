{"version":3,"sources":["webpack:///./src/components/partials/components/PageHeader.tsx","webpack:///./src/components/base/PageContentBase.tsx","webpack:///./src/components/base/PageWithHeaderBase.tsx","webpack:///./src/core/cui.ts","webpack:///./src/components/main/icons/builder/builder.tsx"],"names":["PageHeader","props","className","title","description","PageContentBase","classes","children","PageWithHeaderBase","PageBase","name","contentParentCls","toast","message","window","$cui","emit","CuiDocsIconPackBuilder","icons","setIcons","icon","iconData","index","data","selected","onClick","map","key","CuiIconPackBuilderCard","item","copy","outObj","reduce","out","current","JSON","stringify","then","isSelected"],"mappings":"sIAOO,SAASA,EAAWC,GACvB,OAAQ,uBAAKC,UAAU,qFACnB,uBAAKA,UAAU,mBACX,sBAAIA,UAAU,qBAAqBD,EAAME,OACzC,qBAAGD,UAAU,IAAID,EAAMG,e,YCL5B,SAASC,EAAgBJ,GAC5B,IAAIK,EAAU,oDAId,OAHIL,EAAMK,UACNA,GAAW,IAAML,EAAMK,SAEnB,uBAAKJ,UAAWI,GACnBL,EAAMM,UCAR,SAASC,EAAmBP,GAC/B,OAAQ,gBAACQ,EAAA,EAAQ,CAACC,KAAMT,EAAMS,MAAM,gBAACV,EAAU,CAACG,MAAOF,EAAMS,KAAMN,YAAaH,EAAMG,cAClF,gBAACC,EAAe,CAACC,QAASL,EAAMU,kBAC3BV,EAAMM,a,gCCfZ,SAASK,EAAMC,GAClBC,OAAOC,KAAKC,KAAK,QAAS,gBAAiBH,GAD/C,mC,gCCAA,yKAiBe,SAASI,IACpB,MAAOC,EAAOC,GAAY,WAAkC,IA0C5D,OAZA,YAAgB,KAEZA,EAAS,YAAiB,IAAc,CAACC,EAAcC,EAAkBC,KAC9D,CACHZ,KAAMU,EACNG,KAAMF,EACNG,UAAU,EACVF,MAAOA,MAGR,QACR,IACE,YAAGJ,GAGA,gBAAC,IAAkB,CAACR,KAAK,gBAAgBN,YAAY,+CACzD,uBAAKF,UAAU,oCACX,0BAAQA,UAAU,yBAAyBuB,QAvCnD,WACIN,EAASD,EAAMQ,IAAIN,IACfA,EAAKI,UAAW,EACTJ,OAoC6D,cACpE,0BAAQlB,UAAU,6CAA6CuB,QA/CvE,WACIN,EAASD,EAAMQ,IAAIN,IACfA,EAAKI,UAAW,EACTJ,OA4CsF,UAEjG,uBAAKlB,UAAU,mFACVgB,EAAMQ,IAAKN,GACD,uBAAKO,IAAKP,EAAKE,OAClB,gBAACM,EAAsB,CAACC,KAAMT,EAAMK,QAAUI,IAC1C,IAAIC,EAAO,IAAIZ,GACfY,EAAKD,EAAKP,OAASO,EACnBV,EAASW,SAIzB,uBAAK5B,UAAU,uFACX,0BAAQA,UAAU,6EAA4E,WAAU,SAASuB,QA9CzH,WACI,IAAIM,EAASb,EAAMc,OAA8B,CAACC,EAA4BC,KACtEA,EAAQV,WACRS,EAAIC,EAAQxB,MAAQwB,EAAQX,MAEzBU,GACR,IAEC,YAAGF,IACH,YAASI,KAAKC,UAAUL,IAASM,KAAK,KAClC,YAAM,+BAoC4H,WAlBnI,gBAAC,IAAS,CAAC/B,QAAQ,4BA4B3B,SAASsB,EAAuB3B,GASnC,OAAQ,uBAAKC,WAHKoC,EAGerC,EAAM4B,KAAKL,SAFjC,iDAAmDc,EAAa,aAAe,gBAEnCb,QARvD,WACIxB,EAAM4B,KAAKL,UAAYvB,EAAM4B,KAAKL,SAClCvB,EAAMwB,QAAQxB,EAAM4B,QAOpB,uBAAK3B,UAAU,iBACX,uBAAKA,UAAU,uBACX,mCAAgBD,EAAM4B,KAAKnB,OAC3B,wBAAMR,UAAU,uCAAuCD,EAAM4B,KAAKnB,SAP9E,IAAkB4B","file":"cui-light-doc.pack.6.5b924c66926a3a7494ae.js","sourcesContent":["import * as React from 'react'\r\n\r\nexport interface PageHeaderProps {\r\n    title: string;\r\n    description?: string;\r\n}\r\n\r\nexport function PageHeader(props: PageHeaderProps) {\r\n    return (<div className=\"cui-flex cui-middle cui-center cui-height-viewport-1-2 cui-height-viewport-1-4--m\">\r\n        <div className=\"cui-text-center\">\r\n            <h1 className=\"cui-article-title\">{props.title}</h1>\r\n            <p className=\"\">{props.description}</p>\r\n        </div>\r\n    </div>);\r\n}\r\n","import * as React from 'react'\r\n\r\nexport interface PageContentBaseProps {\r\n    children: JSX.Element[] | JSX.Element | undefined;\r\n    classes?: string;\r\n}\r\nexport function PageContentBase(props: PageContentBaseProps) {\r\n    let classes = \"limited-content-width cui-section cui-margin-auto\";\r\n    if (props.classes) {\r\n        classes += \" \" + props.classes;\r\n    }\r\n    return (<div className={classes}>\r\n        {props.children}\r\n    </div>);\r\n}\r\n","import * as React from 'react'\r\nimport { setDocumentTitle } from '../../core/functions';\r\nimport { PageHeader } from '../partials/components/PageHeader';\r\nimport { PageBase } from './PageBase';\r\nimport { PageContentBase } from './PageContentBase';\r\n\r\nexport interface PageWithHeaderBaseProps {\r\n    children?: JSX.Element[] | JSX.Element | undefined;\r\n    name: string;\r\n    description?: string;\r\n    contentParentCls?: string;\r\n}\r\nexport function PageWithHeaderBase(props: PageWithHeaderBaseProps) {\r\n    return (<PageBase name={props.name}><PageHeader title={props.name} description={props.description} />\r\n        <PageContentBase classes={props.contentParentCls}>\r\n            {props.children}\r\n        </PageContentBase>\r\n    </PageBase>);\r\n}\r\n","export function toast(message: string): void {\r\n    window.$cui.emit(\"toast\", \"~toast-plugin\", message);\r\n}","import { CuiIconsPack } from 'bpd-cui-icons/esm/index';\r\nimport * as React from 'react'\r\nimport { GeneralObject } from '../../../../core/models';\r\nimport { PageWithHeaderBase } from '../../../../components/base/PageWithHeaderBase';\r\nimport { mapObjectToArray } from '../../../../core/functions';\r\nimport { copyText } from '../../../../utils/function';\r\nimport { is } from 'bpd-toolkit/dist/esm/index';\r\nimport { toast } from '../../../../core/cui';\r\nimport { IsLoading } from '../../../../components/base/IsLoading';\r\n\r\ninterface CuiIconPackItem {\r\n    name: string;\r\n    data: string;\r\n    selected: boolean;\r\n    index: number;\r\n}\r\n\r\nexport default function CuiDocsIconPackBuilder() {\r\n    const [icons, setIcons] = React.useState<CuiIconPackItem[]>([]);\r\n    function onClearSelectionClick() {\r\n        setIcons(icons.map(icon => {\r\n            icon.selected = false;\r\n            return icon\r\n        }))\r\n    }\r\n\r\n    function onSelectAllClick() {\r\n        setIcons(icons.map(icon => {\r\n            icon.selected = true;\r\n            return icon\r\n        }))\r\n    }\r\n\r\n    function onBuildClick() {\r\n        let outObj = icons.reduce<GeneralObject<string>>((out: GeneralObject<string>, current: CuiIconPackItem) => {\r\n            if (current.selected) {\r\n                out[current.name] = current.data;\r\n            }\r\n            return out;\r\n        }, {});\r\n\r\n        if (is(outObj)) {\r\n            copyText(JSON.stringify(outObj)).then(() => {\r\n                toast(\"Package has been copied\")\r\n            })\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        //Map icons object to array\r\n        setIcons(mapObjectToArray(CuiIconsPack, (icon: string, iconData: string, index: number) => {\r\n            return {\r\n                name: icon,\r\n                data: iconData,\r\n                selected: false,\r\n                index: index\r\n            }\r\n        }))\r\n        return () => { }\r\n    }, [])\r\n    if (!is(icons)) {\r\n        return <IsLoading classes=\"cui-height-viewport-1-2\" />\r\n    }\r\n    return (<PageWithHeaderBase name=\"Icons builder\" description=\"Tool which allows to build custom icon pack\">\r\n        <div className=\"cui-container cui-flex cui-right\">\r\n            <button className=\"cui-button cui-default\" onClick={onSelectAllClick}>Select All</button>\r\n            <button className=\"cui-button cui-error cui-margin-small-left\" onClick={onClearSelectionClick}>Clear</button>\r\n        </div>\r\n        <div className=\"cui-flex-grid cui-child-width-1-2 cui-child-width-1-3--m cui-child-width-1-4--l\">\r\n            {icons.map((icon) => {\r\n                return <div key={icon.index}>\r\n                    <CuiIconPackBuilderCard item={icon} onClick={(item => {\r\n                        let copy = [...icons];\r\n                        copy[item.index] = item;\r\n                        setIcons(copy)\r\n                    })} /></div>\r\n            })}\r\n        </div>\r\n        <div className=\"cui-container cui-center cui-position-float cui-position-bottom cui-position-center\">\r\n            <button className=\"cui-button cui-accent cui-large cui-box-shadow cui-rounded cui-icon-margin\" cui-icon=\"wrench\" onClick={onBuildClick}>Build</button>\r\n        </div>\r\n    </PageWithHeaderBase>);\r\n}\r\n\r\nexport interface CuiIconPackBuilderCardProps {\r\n    item: CuiIconPackItem;\r\n    onClick: (item: CuiIconPackItem) => void\r\n}\r\n\r\nexport function CuiIconPackBuilderCard(props: CuiIconPackBuilderCardProps) {\r\n    function onSelect() {\r\n        props.item.selected = !props.item.selected;\r\n        props.onClick(props.item);\r\n    }\r\n\r\n    function getClass(isSelected: boolean) {\r\n        return \"cui-card cui-cursor-pointer cui-margin-small \" + (isSelected ? \"cui-accent\" : \"cui-default\");\r\n    }\r\n    return (<div className={getClass(props.item.selected)} onClick={onSelect}>\r\n        <div className=\"cui-card-body\">\r\n            <div className=\"cui-flex cui-nowrap\">\r\n                <span cui-icon={props.item.name}></span>\r\n                <span className=\"cui-margin-left cui-overflow-hidden\">{props.item.name}</span>\r\n            </div>\r\n        </div>\r\n    </div>);\r\n}\r\n"],"sourceRoot":""}