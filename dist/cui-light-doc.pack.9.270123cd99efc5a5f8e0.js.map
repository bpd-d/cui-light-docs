{"version":3,"sources":["webpack:///./src/components/partials/components/PageHeader.tsx","webpack:///./src/components/base/PageContentBase.tsx","webpack:///./src/components/base/PageWithHeaderBase.tsx","webpack:///./src/components/main/download.tsx","webpack:///./src/core/imports/links.ts"],"names":["PageHeader","props","className","title","description","PageContentBase","classes","children","PageWithHeaderBase","PageBase","name","contentParentCls","Download","DownloadPageContent","links","setLinks","undefined","Promise","resolve","reject","fetch","then","response","json","file","getDownloadLinks","data","DownloadPageLink","url","href","IsLoading","target"],"mappings":"sIAOO,SAASA,EAAWC,GACvB,OAAQ,uBAAKC,UAAU,qFACnB,uBAAKA,UAAU,mBACX,sBAAIA,UAAU,qBAAqBD,EAAME,OACzC,qBAAGD,UAAU,IAAID,EAAMG,e,YCL5B,SAASC,EAAgBJ,GAC5B,IAAIK,EAAU,oDAId,OAHIL,EAAMK,UACNA,GAAW,IAAML,EAAMK,SAEnB,uBAAKJ,UAAWI,GACnBL,EAAMM,UCAR,SAASC,EAAmBP,GAC/B,OAAQ,gBAACQ,EAAA,EAAQ,CAACC,KAAMT,EAAMS,MAAM,gBAACV,EAAU,CAACG,MAAOF,EAAMS,KAAMN,YAAaH,EAAMG,cAClF,gBAACC,EAAe,CAACC,QAASL,EAAMU,kBAC3BV,EAAMM,a,sHCVJ,SAASK,EAASX,GAC7B,OACI,gBAACO,EAAA,EAAkB,CAACE,KAAK,WAAWN,YAAY,4CAC5C,gBAACS,EAAmB,OAKhC,SAASA,IACL,MAAOC,EAAOC,GAAY,gBAAoBC,GAK9C,OAJA,YAAgB,MCbb,WACH,IAAIF,OAAaE,EACjB,OAAO,IAAIC,QAAQ,CAACC,EAASC,KACrB,YAAGL,GACHI,EAAQJ,GAGZM,MAAM,uCAAuCC,KACzCC,GAAYA,EAASC,QACvBF,KAAKG,IACHV,EAAQU,EACRN,EAAQJ,QDGZW,GAAmBJ,KAAMK,GAASX,EAASW,KAC5C,IAEEZ,EAGE,gCACH,uBAAKZ,UAAU,eACX,sBAAIA,UAAU,UAAQ,UACtB,sBAAIA,UAAU,UAAQ,UACtB,yB,4JAA4J,iC,YAAoB,gBAACyB,EAAgB,CAACC,IAAKd,EAAM,sBAAuBJ,KAAK,gB,KACzO,yB,kKAAkK,gBAACiB,EAAgB,CAACC,IAAKd,EAAW,IAAGJ,KAAK,U,gDAAuD,gBAACiB,EAAgB,CAACC,IAAKd,EAAM,sBAChS,sBAAIZ,UAAU,UAAQ,QACtB,yB,mJAAmJ,gBAACyB,EAAgB,CAACC,IAAKd,EAAM,qBAAsBJ,KAAK,S,KAC3M,yB,8FAA8F,wBAAMR,UAAU,iCAA+B,uCAEjJ,uBAAKA,UAAU,eACX,sBAAIA,UAAU,UAAQ,cACtB,sBAAIA,UAAU,UAAQ,UACtB,yB,+OAA+O,iC,YAAoB,gBAACyB,EAAgB,CAACC,IAAKd,EAAM,kBAAmBJ,KAAK,YACxT,yB,0FAA0F,qBAAGR,UAAU,sBAAsB2B,KAAK,sBAAoB,S,oEAA2E,gBAACF,EAAgB,CAACC,IAAKd,EAAM,eAAgBJ,KAAK,a,QAAkB,gBAACiB,EAAgB,CAACC,IAAKd,EAAM,mBAAoBJ,KAAK,kBAC3V,sBAAIR,UAAU,UAAQ,sBACtB,yB,6GAA6G,uC,kHAAgI,gBAACyB,EAAgB,CAACC,IAAKd,EAAM,iBAAkBJ,KAAK,W,oBAA4B,wBAAMR,UAAU,iCAA+B,yCAC5W,yB,qFAAqF,gBAACyB,EAAgB,CAACC,IAAKd,EAAM,qBAAsBJ,KAAK,W,8FAnB1I,gBAACoB,EAAA,EAAS,MA6BzB,SAASH,EAAiB1B,G,MACtB,OAAO,qBAAG4B,KAAM5B,EAAM2B,IAAKG,OAAO,SAAS7B,UAAU,uBAAiC,QAAZ,EAAED,EAAMS,YAAI,QAAIT,EAAM2B","file":"cui-light-doc.pack.9.270123cd99efc5a5f8e0.js","sourcesContent":["import * as React from 'react'\r\n\r\nexport interface PageHeaderProps {\r\n    title: string;\r\n    description?: string;\r\n}\r\n\r\nexport function PageHeader(props: PageHeaderProps) {\r\n    return (<div className=\"cui-flex cui-middle cui-center cui-height-viewport-1-2 cui-height-viewport-1-4--m\">\r\n        <div className=\"cui-text-center\">\r\n            <h1 className=\"cui-article-title\">{props.title}</h1>\r\n            <p className=\"\">{props.description}</p>\r\n        </div>\r\n    </div>);\r\n}\r\n","import * as React from 'react'\r\n\r\nexport interface PageContentBaseProps {\r\n    children: JSX.Element[] | JSX.Element | undefined;\r\n    classes?: string;\r\n}\r\nexport function PageContentBase(props: PageContentBaseProps) {\r\n    let classes = \"limited-content-width cui-section cui-margin-auto\";\r\n    if (props.classes) {\r\n        classes += \" \" + props.classes;\r\n    }\r\n    return (<div className={classes}>\r\n        {props.children}\r\n    </div>);\r\n}\r\n","import * as React from 'react'\r\nimport { setDocumentTitle } from '../../core/functions';\r\nimport { PageHeader } from '../partials/components/PageHeader';\r\nimport { PageBase } from './PageBase';\r\nimport { PageContentBase } from './PageContentBase';\r\n\r\nexport interface PageWithHeaderBaseProps {\r\n    children?: JSX.Element[] | JSX.Element | undefined;\r\n    name: string;\r\n    description?: string;\r\n    contentParentCls?: string;\r\n}\r\nexport function PageWithHeaderBase(props: PageWithHeaderBaseProps) {\r\n    return (<PageBase name={props.name}><PageHeader title={props.name} description={props.description} />\r\n        <PageContentBase classes={props.contentParentCls}>\r\n            {props.children}\r\n        </PageContentBase>\r\n    </PageBase>);\r\n}\r\n","import * as React from \"react\";\r\nimport { getDownloadLinks } from \"../../core/imports/links\";\r\nimport { IsLoading } from \"../base/IsLoading\";\r\nimport { PageWithHeaderBase } from \"../base/PageWithHeaderBase\";\r\n\r\nexport default function Download(props: any) {\r\n    return (\r\n        <PageWithHeaderBase name=\"Download\" description=\"Download or import files to your project\">\r\n            <DownloadPageContent />\r\n        </PageWithHeaderBase>\r\n    )\r\n}\r\n\r\nfunction DownloadPageContent() {\r\n    const [links, setLinks] = React.useState<any>(undefined);\r\n    React.useEffect(() => {\r\n        getDownloadLinks().then((data) => setLinks(data))\r\n    }, [])\r\n\r\n    if (!links) {\r\n        return <IsLoading />;\r\n    }\r\n    return <>\r\n        <div className=\"cui-section\">\r\n            <h2 className=\"cui-h2\">Styles</h2>\r\n            <h3 className=\"cui-h3\">Bundle</h3>\r\n            <p>cUI Styles package comes with pre-built CSS bundle. After each iteration, library is built and published to Github repository. Files can be found in the <b>dist</b> folder: <DownloadPageLink url={links['styles-github-dist']} name=\"Github dist\" />.</p>\r\n            <p>Another way of obtaining built project is to use a NPM package. To do this use your favorite CDN service that caches NPM repositories. In this example we use  <DownloadPageLink url={links['cdn']} name=\"UNPKG\" /> service to show how bundle can be obtained: <DownloadPageLink url={links['styles-cdn-dist']} /></p>\r\n            <h3 className=\"cui-h3\">SASS</h3>\r\n            <p>cUI Styles package exposes whole SASS project in shape of *.scss file. They can be downloaded manually from Github repository, from folder src: <DownloadPageLink url={links['styles-github-src']} name=\"SASS\" />.</p>\r\n            <p>Better and recommended approach would be to import package via npm service, using command: <span className=\"cui-text-bold cui-text-accent\">npm install cui-styles --save-dev</span></p>\r\n        </div>\r\n        <div className=\"cui-section\">\r\n            <h2 className=\"cui-h2\">Javascript</h2>\r\n            <h3 className=\"cui-h3\">Bundle</h3>\r\n            <p>cUI Light Javascript package also comes as pre-built bundle. After each version, there two options published to Github dist: common and minified version. cUI Light ESM files are also published to dist foleder. Files can be found in the <b>dist</b> folder: <DownloadPageLink url={links['js-github-dist']} name=\"Github\" /></p>\r\n            <p>Similarily to styles, JS files also can be attached to project from CDN service, like: <a className=\"cui-link cui-accent\" href=\"https://unpkg.com/\">UNPKG</a>. Two examples show how to get bundle and it's minified version: <DownloadPageLink url={links[\"js-cdn-dist\"]} name=\"index.js\" /> and <DownloadPageLink url={links[\"js-cdn-dist-min\"]} name=\"index.min.js\" /></p>\r\n            <h3 className=\"cui-h3\">ESM and Typescript</h3>\r\n            <p>cUI Light project provides two another ways of intergating it with other projects. Since it is written in <b>Typescript</b> it allows to import users raw *.ts files into project. They can be imported from folder src (Github and NPM): <DownloadPageLink url={links['js-github-src']} name=\"Github\" /> or via command: <span className=\"cui-text-bold cui-text-accent\">npm install cui-light-app --save-dev</span></p>\r\n            <p>For those who want to use compiled version, ESM files are in the folder dist/esm: <DownloadPageLink url={links['js-github-src-esm']} name=\"Github\" />. They all contain TS declaration files so they also can be freely used with Typescript.</p>\r\n        </div>\r\n    </>\r\n}\r\n\r\ninterface DownloadPageLinkProps {\r\n    url: string;\r\n    name?: string;\r\n}\r\n\r\nfunction DownloadPageLink(props: DownloadPageLinkProps) {\r\n    return <a href={props.url} target=\"_blank\" className=\"cui-link cui-accent\">{props.name ?? props.url}</a>\r\n}","import { is } from \"../../../node_modules/bpd-toolkit/dist/esm/index\";\r\n\r\nexport function getDownloadLinks(): Promise<any> {\r\n    let links: any = undefined;\r\n    return new Promise((resolve, reject) => {\r\n        if (is(links)) {\r\n            resolve(links);\r\n            return;\r\n        }\r\n        fetch('/assets/content/download_links.json').then(\r\n            response => response.json()\r\n        ).then(file => {\r\n            links = file;\r\n            resolve(links);\r\n        })\r\n    })\r\n}"],"sourceRoot":""}