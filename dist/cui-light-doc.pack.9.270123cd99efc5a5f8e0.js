(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{60:function(e,t,n){"use strict";n.d(t,"a",(function(){return s}));var a=n(1);function i(e){return a.createElement("div",{className:"cui-flex cui-middle cui-center cui-height-viewport-1-2 cui-height-viewport-1-4--m"},a.createElement("div",{className:"cui-text-center"},a.createElement("h1",{className:"cui-article-title"},e.title),a.createElement("p",{className:""},e.description)))}var c=n(33);function l(e){let t="limited-content-width cui-section cui-margin-auto";return e.classes&&(t+=" "+e.classes),a.createElement("div",{className:t},e.children)}function s(e){return a.createElement(c.a,{name:e.name},a.createElement(i,{title:e.name,description:e.description}),a.createElement(l,{classes:e.contentParentCls},e.children))}},72:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return s}));var a=n(1),i=n(34);var c=n(28),l=n(60);function s(e){return a.createElement(l.a,{name:"Download",description:"Download or import files to your project"},a.createElement(r,null))}function r(){const[e,t]=a.useState(void 0);return a.useEffect(()=>{(function(){let e=void 0;return new Promise((t,n)=>{Object(i.b)(e)?t(e):fetch("/assets/content/download_links.json").then(e=>e.json()).then(n=>{e=n,t(e)})})})().then(e=>t(e))},[]),e?a.createElement(a.Fragment,null,a.createElement("div",{className:"cui-section"},a.createElement("h2",{className:"cui-h2"},"Styles"),a.createElement("h3",{className:"cui-h3"},"Bundle"),a.createElement("p",null,"cUI Styles package comes with pre-built CSS bundle. After each iteration, library is built and published to Github repository. Files can be found in the ",a.createElement("b",null,"dist")," folder: ",a.createElement(o,{url:e["styles-github-dist"],name:"Github dist"}),"."),a.createElement("p",null,"Another way of obtaining built project is to use a NPM package. To do this use your favorite CDN service that caches NPM repositories. In this example we use  ",a.createElement(o,{url:e.cdn,name:"UNPKG"})," service to show how bundle can be obtained: ",a.createElement(o,{url:e["styles-cdn-dist"]})),a.createElement("h3",{className:"cui-h3"},"SASS"),a.createElement("p",null,"cUI Styles package exposes whole SASS project in shape of *.scss file. They can be downloaded manually from Github repository, from folder src: ",a.createElement(o,{url:e["styles-github-src"],name:"SASS"}),"."),a.createElement("p",null,"Better and recommended approach would be to import package via npm service, using command: ",a.createElement("span",{className:"cui-text-bold cui-text-accent"},"npm install cui-styles --save-dev"))),a.createElement("div",{className:"cui-section"},a.createElement("h2",{className:"cui-h2"},"Javascript"),a.createElement("h3",{className:"cui-h3"},"Bundle"),a.createElement("p",null,"cUI Light Javascript package also comes as pre-built bundle. After each version, there two options published to Github dist: common and minified version. cUI Light ESM files are also published to dist foleder. Files can be found in the ",a.createElement("b",null,"dist")," folder: ",a.createElement(o,{url:e["js-github-dist"],name:"Github"})),a.createElement("p",null,"Similarily to styles, JS files also can be attached to project from CDN service, like: ",a.createElement("a",{className:"cui-link cui-accent",href:"https://unpkg.com/"},"UNPKG"),". Two examples show how to get bundle and it's minified version: ",a.createElement(o,{url:e["js-cdn-dist"],name:"index.js"})," and ",a.createElement(o,{url:e["js-cdn-dist-min"],name:"index.min.js"})),a.createElement("h3",{className:"cui-h3"},"ESM and Typescript"),a.createElement("p",null,"cUI Light project provides two another ways of intergating it with other projects. Since it is written in ",a.createElement("b",null,"Typescript")," it allows to import users raw *.ts files into project. They can be imported from folder src (Github and NPM): ",a.createElement(o,{url:e["js-github-src"],name:"Github"})," or via command: ",a.createElement("span",{className:"cui-text-bold cui-text-accent"},"npm install cui-light-app --save-dev")),a.createElement("p",null,"For those who want to use compiled version, ESM files are in the folder dist/esm: ",a.createElement(o,{url:e["js-github-src-esm"],name:"Github"}),". They all contain TS declaration files so they also can be freely used with Typescript."))):a.createElement(c.a,null)}function o(e){var t;return a.createElement("a",{href:e.url,target:"_blank",className:"cui-link cui-accent"},null!==(t=e.name)&&void 0!==t?t:e.url)}}}]);
//# sourceMappingURL=cui-light-doc.pack.9.270123cd99efc5a5f8e0.js.map