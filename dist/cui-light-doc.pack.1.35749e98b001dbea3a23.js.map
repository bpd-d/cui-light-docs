{"version":3,"sources":["webpack:///./src/statics/PluginDocs/introduction.tsx","webpack:///./src/statics/PluginDocs/toast.tsx","webpack:///./src/statics/PluginDocs/index.tsx","webpack:///./src/api/DocsElementParser/ElementGenerator.ts","webpack:///./src/components/partials/pre.tsx","webpack:///./src/statics/common.ts","webpack:///./src/statics/Callbacks/callbacks.tsx","webpack:///./src/statics/Callbacks/index.tsx","webpack:///./src/api/DocsElementParser/GeneratorParsers.ts","webpack:///./src/components/preview/preview.tsx"],"names":["CuiDocsPluginsIntroScript","sections","name","description","launchExample","tag","text","pluginsList","uri","script","example","classes","click","className","ElementGenerator","parser","this","data","parse","PreNode","props","node","join","children","length","PreNodeWithChildren","level","PreNodeWithoutChildren","PreJsNode","pre","attr","attributesEl","attributes","arr","push","key","len","map","item","index","functionArgs","child","createGroup","createObjectNode","create","ClassesNode","AttributesNode","classesEl","GLOBAL_COUNTER","CuiDocsCallbackHandler","groups","forEach","g","addSingle","group","replace","prefix","idx","findIndex","find","undefined","args","split","get","trim","callback","callbacks","init","handler","value","createCallbackHandler","plugins","alert","window","$cui","emit","toast","styleClass","call","id","next","onClick","CodePreviewAside","element","code","JsCodePreview","js","CodePreviewTabbed","identification","tabId","switchId","height","href","ExamplePreview","type","getJsCodePreview","build","GetTabbedPreview","GetPreivewWithoutCode"],"mappings":"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","file":"cui-light-doc.pack.1.35749e98b001dbea3a23.js","sourcesContent":["import * as React from \"react\";\r\nimport { DocsScript } from \"src/components/docs/base\";\r\n\r\nexport const CuiDocsPluginsIntroScript: DocsScript = {\r\n    sections:\r\n        [\r\n            {\r\n                name: \"Plugins\",\r\n                description: <>Plugins provide extensions to cUI framework. They are initialized during framework initialization, provide features through all instance lifecycle and are destroyed during instance destruction.\r\n                cUI also exposes API to for plugins - more details can be found in documentation, section API. Main idea standing behind plugins is that they provide features, but framework shall work just fine when they are not included in the package.</>\r\n            }\r\n        ]\r\n}","import * as React from \"react\";\r\nimport { ParserNode } from \"../../api/DocsElementParser/interfaces\";\r\nimport { DocsScript } from \"../../components/docs/base\";\r\nimport { getJsCodePreview, GetPreivewWithoutCode } from \"../../components/preview/preview\";\r\n\r\nconst showToast: ParserNode = {\r\n    tag: \"button\",\r\n    classes: ['cui-button', 'cui-default'],\r\n    text: \"Show Toast\",\r\n    click: \"plugins:toast\"\r\n}\r\n\r\nconst launchExample: ParserNode = {\r\n    tag: \"text\",\r\n    text: `window.$cui.emit(\"toast\", '~toast-plugin', \"Lorem ipsum\");`\r\n}\r\nexport const CuiDocsToastScript: DocsScript = {\r\n    sections: [\r\n        {\r\n            name: \"Usage\",\r\n            description: <>Plugin provides access to simple component which is displayed for short period of time on the bottom part of the screen.\r\n            It can show simple, short text data. It can be used to notify user about event occured in the app. </>,\r\n            example: GetPreivewWithoutCode(showToast)\r\n        },\r\n        {\r\n            name: \"Implementation\",\r\n            description: <>To call for toast use cUI event bus. Emit event <span className=\"style-class\">toast</span> with message to be displayed in element: </>,\r\n            example: getJsCodePreview(launchExample)\r\n        },\r\n    ]\r\n}","import { CuiDocsComponents } from \"../base\";\r\nimport { CuiDocsPluginsIntroScript } from \"./introduction\";\r\nimport { CuiDocsToastScript } from \"./toast\";\r\n\r\nconst pluginsList: CuiDocsComponents = {\r\n    'introduction': { name: \"Introduction\", uri: '/docs/plugins/introduction', description: \"\", script: CuiDocsPluginsIntroScript },\r\n    'toast': { name: \"Toast\", uri: \"/docs/plugins/toast\", description: \"Shows lightweight information on the screen\", script: CuiDocsToastScript },\r\n}\r\n\r\nexport default pluginsList;","import { IElementGenerator, ITextParser, ParserNode } from \"./interfaces\";\r\n\r\nexport class ElementGenerator<T> implements IElementGenerator<T> {\r\n    #parser: ITextParser<T>;\r\n    constructor(parser: ITextParser<T>) {\r\n        this.#parser = parser;\r\n    }\r\n\r\n    build(data: ParserNode): T {\r\n        return this.#parser.parse(data, 0);\r\n    }\r\n}\r\n","import * as React from 'react'\r\nimport { ParserNode, ParserNodeAttribute } from '../../api/DocsElementParser/interfaces';\r\n\r\nexport interface preProps { \r\n    node: ParserNode;\r\n    level: number;\r\n}\r\n\r\ninterface ClasssesNodeProps { \r\n    classes: string[];\r\n}\r\n\r\ninterface AttributesNodeProps { \r\n    attributes: ParserNodeAttribute;\r\n}\r\n\r\n\r\n\r\nexport function PreNode(props: preProps) {\r\n    let classesEl = props.node.classes && (<span className=\"\">&nbsp;class=\"<span className=\"cui-var\">{props.node.classes.join(\" \")}</span>\"</span> )\r\n   \r\n    return (\r\n        <>\r\n            {\r\n                props.node.children && props.node.children.length > 0 ? \r\n                    <PreNodeWithChildren node={props.node} level={props.level} />\r\n                :\r\n                    <PreNodeWithoutChildren node={props.node} level={props.level}/>\r\n            }\r\n        </>);\r\n}\r\n\r\nexport function PreJsNode(pre: preProps) { \r\n    function create(pre: preProps): JSX.Element {\r\n        switch (pre.node.tag) { \r\n            case \"function\":\r\n                return createJsFunctionNode(pre)\r\n            case \"group\":\r\n                return createGroup(pre)\r\n            case \"object\":\r\n                return createObjectNode(pre);\r\n            default:\r\n                return createJsTextNode(pre.node, pre.level)\r\n        }\r\n    }\r\n        return (<>{create(pre)}</>)\r\n}\r\n\r\nfunction PreNodeWithoutChildren(props: preProps) { \r\n    return (<><span><span className={props.level > 0 ? \"cui-indent-\" + props.level : \"\"}>&lt;<span className=\"cui-tag\">{props.node.tag}</span>\r\n        <ClassesNode classes={props.node.classes} />\r\n        <AttributesNode attributes={props.node.attributes} />&gt;</span>\r\n        <span>{props.node.text}</span>\r\n        <span>&lt;/<span className=\"cui-tag\">{props.node.tag}</span>&gt;</span></span></>)\r\n}\r\n\r\nfunction PreNodeWithChildren(props: preProps) { \r\n    return (<><span><span className={props.level > 0 ? \"cui-indent-\" + props.level : \"\"}>&lt;<span className=\"cui-tag\">{props.node.tag}</span><ClassesNode classes={props.node.classes} /><AttributesNode attributes={props.node.attributes} />&gt;</span></span>\r\n            {\r\n                props.node.children && props.node.children.map((child: ParserNode, index: number) => {\r\n                    return <PreNode key={index} node={child} level={props.level + 1} />\r\n                })\r\n            }\r\n            <span><span className={props.level > 0 ? \"cui-indent-\" + props.level : \"\"}>&lt;/<span className=\"cui-tag\">{props.node.tag}</span>&gt;</span></span></>);\r\n}\r\n\r\nfunction ClassesNode(props: ClasssesNodeProps) { \r\n    let classesEl = props.classes && (<span className=\"\">&nbsp;class=\"<span className=\"cui-var\">{props.classes.join(\" \")}</span>\"</span>)\r\n    return (<>{classesEl}</>);\r\n}\r\n\r\nfunction AttributesNode(props: AttributesNodeProps) { \r\n    let attributesEl = props.attributes && (enumerateAttributes(props.attributes));\r\n    function enumerateAttributes(attributes: ParserNodeAttribute) { \r\n        let arr = [];\r\n        for (let attr in attributes) { \r\n            arr.push((<span key={attr}>&nbsp;\r\n                {attr}=\"<span className=\"cui-var\">{attributes[attr]}</span>\"</span>))\r\n        }\r\n        return arr;\r\n    }\r\n    return (<>{attributesEl}</> );\r\n}\r\n\r\n// JS related\r\n\r\nfunction createJsTextNode(node: ParserNode, level: number) {\r\n    return <span><span className={level > 0 ? \"cui-indent-\" + level : \"\"}>{node.text}</span></span>;\r\n}\r\n\r\nfunction createJsFunctionNode(props: preProps) { \r\n    return (<><span><span className={props.level > 0 && \"cui-indent-\" + props.level}>function <span className=\"cui-tag\">{props.node.text}</span>&#040;{functionArgs(props.node.attributes)}&#041; &#123;</span></span>\r\n        {\r\n            props.node.children && props.node.children.map((child: ParserNode, index: number) => {\r\n                return <PreJsNode key={index} node={child} level={props.level + 1} />\r\n            })\r\n        }\r\n        <span><span className={props.level > 0 ? \"cui-indent-\" + props.level : \"\"}>&#125;</span></span></>);\r\n}\r\n\r\nfunction createObjectNode(props: preProps) {\r\n    return (<><span><span className={props.level > 0 && \"cui-indent-\" + props.level}>const <span className=\"cui-tag\">{props.node.text}</span> = &#123;</span></span>\r\n        {\r\n            props.node.children && props.node.children.map((child: ParserNode, index: number) => {\r\n                return <PreJsNode key={index} node={child} level={props.level + 1} />\r\n            })\r\n        }\r\n        <span><span className={props.level > 0 ? \"cui-indent-\" + props.level : \"\"}>&#125;</span></span></>);\r\n}\r\n\r\nfunction createGroup(props: preProps): JSX.Element { \r\n    return <>\r\n        {props.node.children.map((item, index) => { \r\n          return  <PreJsNode key={index} node={item} level={props.level} /> \r\n        })}\r\n    </>\r\n}\r\n\r\nfunction functionArgs(attr: ParserNodeAttribute) { \r\n     let attributesEl = attr && (enumerateAttributes(attr));\r\n    function enumerateAttributes(attributes: ParserNodeAttribute) { \r\n        let arr = [];\r\n        for (let attr in attributes) { \r\n            arr.push(\r\n                (<><span key={attr} className=\"cui-var\">{attr}</span><span>:{attributes[attr]}</span></>))\r\n        }\r\n\r\n        return arr;\r\n    }\r\n    let len = attributesEl ? attributesEl.length : 0;\r\n    return (<>{attributesEl.map((item: JSX.Element, index: number) => { \r\n        if (index < len - 1) {\r\n            return <>{item}, </>\r\n        }\r\n        return item\r\n    })}</> );\r\n}","import { count } from \"../utils/function\";\r\n\r\nexport const GLOBAL_COUNTER = count()","import { enumerate } from \"../../utils/function\";\r\n\r\nexport function createCallbackHandler<T>(init: ICuiCallbackHandlerInit<T>): CuiDocsCallbackHandler<T> {\r\n    const handler = new CuiDocsCallbackHandler<T>();\r\n    if (init) {\r\n        enumerate((key: string, value: ICuiDocsCallbacks<T>) => {\r\n            handler.addSingle({ prefix: key, callbacks: value })\r\n        }, init)\r\n    }\r\n    return handler;\r\n}\r\n\r\nexport class CuiDocsCallbackHandler<T> {\r\n    groups: ICuiCallbackGroup<T>[];\r\n    constructor() {\r\n        this.groups = [];\r\n    }\r\n\r\n    add(...groups: ICuiCallbackGroup<T>[]) {\r\n        if (!groups || groups.length === 0) {\r\n            return;\r\n        }\r\n        groups.forEach(g => this.addSingle(g))\r\n    }\r\n\r\n    addSingle(group: ICuiCallbackGroup<T>, replace?: boolean) {\r\n        if (!group || !group.prefix) {\r\n            return;\r\n        }\r\n        let idx = this.groups.findIndex(g => g.prefix === group.prefix)\r\n        if (idx < 0) {\r\n            this.groups.push(group)\r\n        }\r\n        if (replace === true) {\r\n            this.groups[idx] = group;\r\n        }\r\n    }\r\n\r\n    get(prefix: string): ICuiCallbackGroup<T> | undefined {\r\n        return prefix ? this.groups.find(g => g.prefix === prefix) : undefined;\r\n    }\r\n\r\n    call(name: string, ...args: T[]) {\r\n        let split = name.split(':');\r\n        if (split.length < 2) {\r\n            return;\r\n        }\r\n        let group = this.get(split[0].trim());\r\n        if (!group) {\r\n            return;\r\n        }\r\n        const callback = group.callbacks[split[1].trim()];\r\n        if (callback) {\r\n            callback(...args);\r\n        }\r\n    }\r\n\r\n}","import { createCallbackHandler } from \"./callbacks\";\r\n\r\nconst docsCallbacks = createCallbackHandler({\r\n    plugins: {\r\n        alert: () => {\r\n            window.$cui.emit(\"alert\", '~alert-plugin', \"Alert\");\r\n        },\r\n        toast: () => {\r\n            window.$cui.emit(\"toast\", '~toast-plugin', \"Lorem ipsum\");\r\n        }\r\n    }\r\n})\r\n\r\nexport default docsCallbacks;","import * as React from \"react\";\r\nimport { PreJsNode, PreNode } from \"../../components/partials/pre\";\r\nimport { GLOBAL_COUNTER } from \"../../statics/common\";\r\nimport { ITextParser, ParserNode } from \"./interfaces\";\r\nimport callbackHandler from \"../../statics/Callbacks/index\";\r\n\r\n// export class HTMLElementParser implements ITextParser<HTMLElement> {\r\n\r\n//     parse(node: ParserNode, level: number): HTMLElement {\r\n//         if (!node || !node.tag) {\r\n//             return undefined;\r\n//         }\r\n//         let element = document.createElement(node.tag)\r\n//         if (node.classes) {\r\n//             element.classList.add(...node.classes);\r\n//         }\r\n//         if (node.id) {\r\n//             element.id = node.id;\r\n//         }\r\n//         if (node.text) {\r\n//             element.textContent = node.text;\r\n//         }\r\n//         if (node.attributes) {\r\n//             for (let attribute in node.attributes) {\r\n//                 element.setAttribute(attribute, node.attributes[attribute]);\r\n//             }\r\n//         }\r\n//         if (node.children && node.children.length > 0) {\r\n//             node.children.forEach(child => {\r\n//                 element.appendChild(this.parse(child, level + 1))\r\n//             })\r\n\r\n//         }\r\n//         return element;\r\n//     }\r\n\r\n//     appendChildrens(element: HTMLElement, t: HTMLElement[]): HTMLElement {\r\n//         t.forEach(node => {\r\n//             element.appendChild(node);\r\n//         })\r\n//         return element;\r\n//     }\r\n\r\n// }\r\n\r\nexport class PreCodeParser implements ITextParser<HTMLElement> {\r\n    parse(node: ParserNode, level: number): HTMLElement {\r\n        let element = document.createElement(\"span\");\r\n        return element;\r\n    }\r\n\r\n    appendChildrens(element: HTMLElement, t: HTMLElement[]): HTMLElement {\r\n        t.forEach(node => {\r\n            element.appendChild(node);\r\n        })\r\n        return element;\r\n    }\r\n}\r\n\r\nexport class ReactParser implements ITextParser<any> {\r\n    parse(node: ParserNode, level: number): any {\r\n        let children: any[] = undefined;\r\n        let classes = node.classes ?? [];\r\n        let attributes = node.attributes ?? {};\r\n        let callback = undefined;\r\n        if (node.text) {\r\n\r\n            children = [node.text];\r\n        }\r\n        if (node.children) {\r\n            children = children ?? [];\r\n            node.children.forEach(child => {\r\n                children.push(this.parse(child, level + 1))\r\n            })\r\n        }\r\n        if (node.styleClass) {\r\n            classes.push(node.styleClass)\r\n        }\r\n\r\n        if (node.click) {\r\n            callback = () => {\r\n                callbackHandler.call(node.click)\r\n            }\r\n        }\r\n        return React.createElement(node.tag, {\r\n            className: classes.join(\" \"),\r\n            id: node.id,\r\n            key: node.tag + level + GLOBAL_COUNTER.next().value,\r\n            onClick: callback ? callback : undefined,\r\n            ...attributes\r\n        }, children)\r\n    }\r\n}\r\n\r\nexport class ReactPreParser implements ITextParser<any> {\r\n\r\n    parse(node: ParserNode, level: number) {\r\n        let arr = [];\r\n\r\n        if (node.text) {\r\n            arr.push(node.text)\r\n        }\r\n        return React.createElement(PreNode, { node: node, level: 0 });\r\n    }\r\n}\r\n\r\nexport class ReactJsParser implements ITextParser<JSX.Element> {\r\n    parse(node: ParserNode, level: number): JSX.Element {\r\n        return React.createElement(PreJsNode, { node: node, level: 0 })\r\n    }\r\n\r\n}","import * as React from \"react\";\r\nimport { ParserNode } from \"../../api/DocsElementParser/interfaces\";\r\nimport { ElementGenerator } from \"../../api/DocsElementParser/ElementGenerator\";\r\nimport { ReactPreParser, ReactParser, ReactJsParser } from \"../../api/DocsElementParser/GeneratorParsers\";\r\nimport { GLOBAL_COUNTER } from \"../../statics/common\";\r\n\r\nexport type CuiPreviewType = 'aside' | \"tabbed\";\r\n\r\nexport interface CodePreviewProps {\r\n    code: JSX.Element;\r\n    //  identification: string;\r\n    element: JSX.Element;\r\n    js?: JSX.Element;\r\n    height?: string;\r\n}\r\n\r\nexport interface JsCodePrevieProps {\r\n    js: JSX.Element;\r\n}\r\n\r\nexport interface TabbedPreviewProps {\r\n    node: ParserNode;\r\n}\r\n\r\nexport interface SimplePreviewProps {\r\n    element: JSX.Element;\r\n}\r\n\r\nexport function CodePreviewAside(props: CodePreviewProps) {\r\n    return (\r\n        <div className=\"cui-flex-grid cui-child-width-1-1 cui-child-width-1-2--s\">\r\n            <div>{props.element}</div>\r\n            <div className=\"cui-background-shade\">\r\n                <pre>{props.code}</pre>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport function JsCodePreview(props: JsCodePrevieProps) {\r\n    return (\r\n        <div className=\"cui-code cui-format cui-line-counter\">\r\n            {props.js}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport function SimplePreview(props: SimplePreviewProps) {\r\n    return (\r\n        <div className=\"cui-flex-center\">\r\n            {props.element}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport function CodePreviewTabbed(props: CodePreviewProps) {\r\n    const identification = GLOBAL_COUNTER.next().value;\r\n    let tabId = \"tab-\" + identification;\r\n    let switchId = 'switch-' + identification;\r\n    let height = props.height ? \"; height:\" + props.height : \"\";\r\n    return (\r\n        <div className=\"\">\r\n            <ul className=\"cui-tab\" cui-switcher={`target: #${switchId}${height}`} id={tabId}>\r\n                <li><a href=\"#\">Preview</a></li>\r\n                {props.code && <li> <a href=\"#\">HTML</a></li>}\r\n                {props.js && <li> <a href=\"#\">Code</a></li>}\r\n            </ul>\r\n            <ul className=\"cui-switch cui-margin-top\" cui-switch={`links: #${tabId} > li${height}`} id={switchId}>\r\n                <li className=\"cui-active\"><div className=\"preview-wrapper\">{props.element}</div></li>\r\n                {props.code && <li>\r\n                    <div className=\"cui-code cui-format cui-line-counter cui-overflow-x-auto\">\r\n                        {props.code}\r\n                    </div>\r\n                </li>}\r\n                {props.js && <li>\r\n                    <div className=\"cui-code cui-format cui-line-counter\">\r\n                        {props.js}\r\n                    </div>\r\n                </li>}\r\n            </ul>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport function Preview(props: JsCodePrevieProps) {\r\n    return (\r\n        <div className=\"cui-code cui-format cui-line-counter\">\r\n            {props.js}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport function ExamplePreview(props: CodePreviewProps, type: CuiPreviewType) {\r\n\r\n    switch (type) {\r\n        case \"aside\":\r\n            return <CodePreviewAside code={props.code} element={props.element} />;\r\n        default:\r\n            return <CodePreviewTabbed code={props.code} element={props.element} js={props.js} height={props.height} />;\r\n    }\r\n\r\n}\r\n\r\nexport function getJsCodePreview(node: ParserNode) {\r\n    return <JsCodePreview js={new ElementGenerator(new ReactJsParser()).build(node)} />\r\n}\r\n\r\nexport function GetTabbedPreview(node: ParserNode, height?: string) {\r\n    return ExamplePreview({\r\n        code: new ElementGenerator(new ReactPreParser()).build(node),\r\n        element: new ElementGenerator(new ReactParser()).build(node),\r\n        height: height\r\n    }, 'tabbed')\r\n}\r\n\r\nexport function GetTabbedPreviewWithJs(node: ParserNode, js: string, height?: string) {\r\n    return ExamplePreview({\r\n        code: node && new ElementGenerator(new ReactPreParser()).build(node),\r\n        element: node && new ElementGenerator(new ReactParser()).build(node),\r\n        js: <div>{js}</div>,\r\n        height: height\r\n    }, 'tabbed')\r\n}\r\n\r\nexport function GetPreivewWithoutCode(node: ParserNode) {\r\n    return SimplePreview({\r\n        element: new ElementGenerator(new ReactParser()).build(node),\r\n    })\r\n}"],"sourceRoot":""}